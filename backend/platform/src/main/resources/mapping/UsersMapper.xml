<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.UsersMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.model.entity.Users">
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="identity" jdbcType="INTEGER" property="identity" />
    <result column="banState" jdbcType="BIT" property="banstate" />
    <result column="banType" jdbcType="VARCHAR" property="bantype" />
    <result column="banReason" jdbcType="INTEGER" property="banreason" />
    <result column="banStart" jdbcType="TIMESTAMP" property="banstart" />
    <result column="banEnd" jdbcType="TIMESTAMP" property="banend" />
    <result column="coins" jdbcType="INTEGER" property="coins" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="token" jdbcType="VARCHAR" property="token" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, identity, banState, banType, banReason, banStart, banEnd, coins, password, 
    token
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.model.entity.UsersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from Users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.example.demo.model.entity.UsersExample">
    delete from Users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.entity.Users">
    insert into Users (id, name, identity, 
      banState, banType, banReason, 
      banStart, banEnd, coins, 
      password, token)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{identity,jdbcType=INTEGER}, 
      #{banstate,jdbcType=BIT}, #{bantype,jdbcType=VARCHAR}, #{banreason,jdbcType=INTEGER}, 
      #{banstart,jdbcType=TIMESTAMP}, #{banend,jdbcType=TIMESTAMP}, #{coins,jdbcType=INTEGER}, 
      #{password,jdbcType=VARCHAR}, #{token,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.entity.Users">
    insert into Users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="identity != null">
        identity,
      </if>
      <if test="banstate != null">
        banState,
      </if>
      <if test="bantype != null">
        banType,
      </if>
      <if test="banreason != null">
        banReason,
      </if>
      <if test="banstart != null">
        banStart,
      </if>
      <if test="banend != null">
        banEnd,
      </if>
      <if test="coins != null">
        coins,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="token != null">
        token,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="identity != null">
        #{identity,jdbcType=INTEGER},
      </if>
      <if test="banstate != null">
        #{banstate,jdbcType=BIT},
      </if>
      <if test="bantype != null">
        #{bantype,jdbcType=VARCHAR},
      </if>
      <if test="banreason != null">
        #{banreason,jdbcType=INTEGER},
      </if>
      <if test="banstart != null">
        #{banstart,jdbcType=TIMESTAMP},
      </if>
      <if test="banend != null">
        #{banend,jdbcType=TIMESTAMP},
      </if>
      <if test="coins != null">
        #{coins,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.model.entity.UsersExample" resultType="java.lang.Integer">
    select count(*) from Users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update Users
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.identity != null">
        identity = #{record.identity,jdbcType=INTEGER},
      </if>
      <if test="record.banstate != null">
        banState = #{record.banstate,jdbcType=BIT},
      </if>
      <if test="record.bantype != null">
        banType = #{record.bantype,jdbcType=VARCHAR},
      </if>
      <if test="record.banreason != null">
        banReason = #{record.banreason,jdbcType=INTEGER},
      </if>
      <if test="record.banstart != null">
        banStart = #{record.banstart,jdbcType=TIMESTAMP},
      </if>
      <if test="record.banend != null">
        banEnd = #{record.banend,jdbcType=TIMESTAMP},
      </if>
      <if test="record.coins != null">
        coins = #{record.coins,jdbcType=INTEGER},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.token != null">
        token = #{record.token,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update Users
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      identity = #{record.identity,jdbcType=INTEGER},
      banState = #{record.banstate,jdbcType=BIT},
      banType = #{record.bantype,jdbcType=VARCHAR},
      banReason = #{record.banreason,jdbcType=INTEGER},
      banStart = #{record.banstart,jdbcType=TIMESTAMP},
      banEnd = #{record.banend,jdbcType=TIMESTAMP},
      coins = #{record.coins,jdbcType=INTEGER},
      password = #{record.password,jdbcType=VARCHAR},
      token = #{record.token,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="com.example.demo.model.Users">
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="identity" jdbcType="INTEGER" property="identity" />
    <result column="banState" jdbcType="BIT" property="banstate" />
    <result column="banType" jdbcType="VARCHAR" property="bantype" />
    <result column="banReason" jdbcType="INTEGER" property="banreason" />
    <result column="banStart" jdbcType="TIMESTAMP" property="banstart" />
    <result column="banEnd" jdbcType="TIMESTAMP" property="banend" />
    <result column="coins" jdbcType="INTEGER" property="coins" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="token" jdbcType="VARCHAR" property="token" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, identity, banState, banType, banReason, banStart, banEnd, coins, password, 
    token
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.model.UsersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from Users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.example.demo.model.UsersExample">
    delete from Users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.Users">
    insert into Users (id, name, identity, 
      banState, banType, banReason, 
      banStart, banEnd, coins, 
      password, token)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{identity,jdbcType=INTEGER}, 
      #{banstate,jdbcType=BIT}, #{bantype,jdbcType=VARCHAR}, #{banreason,jdbcType=INTEGER}, 
      #{banstart,jdbcType=TIMESTAMP}, #{banend,jdbcType=TIMESTAMP}, #{coins,jdbcType=INTEGER}, 
      #{password,jdbcType=VARCHAR}, #{token,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.Users">
    insert into Users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="identity != null">
        identity,
      </if>
      <if test="banstate != null">
        banState,
      </if>
      <if test="bantype != null">
        banType,
      </if>
      <if test="banreason != null">
        banReason,
      </if>
      <if test="banstart != null">
        banStart,
      </if>
      <if test="banend != null">
        banEnd,
      </if>
      <if test="coins != null">
        coins,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="token != null">
        token,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="identity != null">
        #{identity,jdbcType=INTEGER},
      </if>
      <if test="banstate != null">
        #{banstate,jdbcType=BIT},
      </if>
      <if test="bantype != null">
        #{bantype,jdbcType=VARCHAR},
      </if>
      <if test="banreason != null">
        #{banreason,jdbcType=INTEGER},
      </if>
      <if test="banstart != null">
        #{banstart,jdbcType=TIMESTAMP},
      </if>
      <if test="banend != null">
        #{banend,jdbcType=TIMESTAMP},
      </if>
      <if test="coins != null">
        #{coins,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.model.UsersExample" resultType="java.lang.Integer">
    select count(*) from Users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update Users
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.identity != null">
        identity = #{record.identity,jdbcType=INTEGER},
      </if>
      <if test="record.banstate != null">
        banState = #{record.banstate,jdbcType=BIT},
      </if>
      <if test="record.bantype != null">
        banType = #{record.bantype,jdbcType=VARCHAR},
      </if>
      <if test="record.banreason != null">
        banReason = #{record.banreason,jdbcType=INTEGER},
      </if>
      <if test="record.banstart != null">
        banStart = #{record.banstart,jdbcType=TIMESTAMP},
      </if>
      <if test="record.banend != null">
        banEnd = #{record.banend,jdbcType=TIMESTAMP},
      </if>
      <if test="record.coins != null">
        coins = #{record.coins,jdbcType=INTEGER},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.token != null">
        token = #{record.token,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update Users
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      identity = #{record.identity,jdbcType=INTEGER},
      banState = #{record.banstate,jdbcType=BIT},
      banType = #{record.bantype,jdbcType=VARCHAR},
      banReason = #{record.banreason,jdbcType=INTEGER},
      banStart = #{record.banstart,jdbcType=TIMESTAMP},
      banEnd = #{record.banend,jdbcType=TIMESTAMP},
      coins = #{record.coins,jdbcType=INTEGER},
      password = #{record.password,jdbcType=VARCHAR},
      token = #{record.token,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="com.example.demo.model.Users">
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="identity" jdbcType="INTEGER" property="identity" />
    <result column="banState" jdbcType="BIT" property="banstate" />
    <result column="banType" jdbcType="VARCHAR" property="bantype" />
    <result column="banReason" jdbcType="INTEGER" property="banreason" />
    <result column="banStart" jdbcType="TIMESTAMP" property="banstart" />
    <result column="banEnd" jdbcType="TIMESTAMP" property="banend" />
    <result column="coins" jdbcType="INTEGER" property="coins" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="token" jdbcType="VARCHAR" property="token" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, identity, banState, banType, banReason, banStart, banEnd, coins, password, 
    token
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.model.UsersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from Users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.example.demo.model.UsersExample">
    delete from Users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.Users">
    insert into Users (id, name, identity, 
      banState, banType, banReason, 
      banStart, banEnd, coins, 
      password, token)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{identity,jdbcType=INTEGER}, 
      #{banstate,jdbcType=BIT}, #{bantype,jdbcType=VARCHAR}, #{banreason,jdbcType=INTEGER}, 
      #{banstart,jdbcType=TIMESTAMP}, #{banend,jdbcType=TIMESTAMP}, #{coins,jdbcType=INTEGER}, 
      #{password,jdbcType=VARCHAR}, #{token,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.Users">
    insert into Users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="identity != null">
        identity,
      </if>
      <if test="banstate != null">
        banState,
      </if>
      <if test="bantype != null">
        banType,
      </if>
      <if test="banreason != null">
        banReason,
      </if>
      <if test="banstart != null">
        banStart,
      </if>
      <if test="banend != null">
        banEnd,
      </if>
      <if test="coins != null">
        coins,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="token != null">
        token,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="identity != null">
        #{identity,jdbcType=INTEGER},
      </if>
      <if test="banstate != null">
        #{banstate,jdbcType=BIT},
      </if>
      <if test="bantype != null">
        #{bantype,jdbcType=VARCHAR},
      </if>
      <if test="banreason != null">
        #{banreason,jdbcType=INTEGER},
      </if>
      <if test="banstart != null">
        #{banstart,jdbcType=TIMESTAMP},
      </if>
      <if test="banend != null">
        #{banend,jdbcType=TIMESTAMP},
      </if>
      <if test="coins != null">
        #{coins,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.model.UsersExample" resultType="java.lang.Integer">
    select count(*) from Users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update Users
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.identity != null">
        identity = #{record.identity,jdbcType=INTEGER},
      </if>
      <if test="record.banstate != null">
        banState = #{record.banstate,jdbcType=BIT},
      </if>
      <if test="record.bantype != null">
        banType = #{record.bantype,jdbcType=VARCHAR},
      </if>
      <if test="record.banreason != null">
        banReason = #{record.banreason,jdbcType=INTEGER},
      </if>
      <if test="record.banstart != null">
        banStart = #{record.banstart,jdbcType=TIMESTAMP},
      </if>
      <if test="record.banend != null">
        banEnd = #{record.banend,jdbcType=TIMESTAMP},
      </if>
      <if test="record.coins != null">
        coins = #{record.coins,jdbcType=INTEGER},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.token != null">
        token = #{record.token,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update Users
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      identity = #{record.identity,jdbcType=INTEGER},
      banState = #{record.banstate,jdbcType=BIT},
      banType = #{record.bantype,jdbcType=VARCHAR},
      banReason = #{record.banreason,jdbcType=INTEGER},
      banStart = #{record.banstart,jdbcType=TIMESTAMP},
      banEnd = #{record.banend,jdbcType=TIMESTAMP},
      coins = #{record.coins,jdbcType=INTEGER},
      password = #{record.password,jdbcType=VARCHAR},
      token = #{record.token,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <resultMap id="BaseResultMap" type="com.example.demo.model.Users">
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="identity" jdbcType="INTEGER" property="identity" />
    <result column="banState" jdbcType="BIT" property="banstate" />
    <result column="banType" jdbcType="VARCHAR" property="bantype" />
    <result column="banReason" jdbcType="INTEGER" property="banreason" />
    <result column="banStart" jdbcType="TIMESTAMP" property="banstart" />
    <result column="banEnd" jdbcType="TIMESTAMP" property="banend" />
    <result column="coins" jdbcType="INTEGER" property="coins" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="token" jdbcType="VARCHAR" property="token" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, identity, banState, banType, banReason, banStart, banEnd, coins, password, 
    token
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.model.UsersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from Users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.example.demo.model.UsersExample">
    delete from Users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.Users">
    insert into Users (id, name, identity, 
      banState, banType, banReason, 
      banStart, banEnd, coins, 
      password, token)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{identity,jdbcType=INTEGER}, 
      #{banstate,jdbcType=BIT}, #{bantype,jdbcType=VARCHAR}, #{banreason,jdbcType=INTEGER}, 
      #{banstart,jdbcType=TIMESTAMP}, #{banend,jdbcType=TIMESTAMP}, #{coins,jdbcType=INTEGER}, 
      #{password,jdbcType=VARCHAR}, #{token,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.Users">
    insert into Users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="identity != null">
        identity,
      </if>
      <if test="banstate != null">
        banState,
      </if>
      <if test="bantype != null">
        banType,
      </if>
      <if test="banreason != null">
        banReason,
      </if>
      <if test="banstart != null">
        banStart,
      </if>
      <if test="banend != null">
        banEnd,
      </if>
      <if test="coins != null">
        coins,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="token != null">
        token,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="identity != null">
        #{identity,jdbcType=INTEGER},
      </if>
      <if test="banstate != null">
        #{banstate,jdbcType=BIT},
      </if>
      <if test="bantype != null">
        #{bantype,jdbcType=VARCHAR},
      </if>
      <if test="banreason != null">
        #{banreason,jdbcType=INTEGER},
      </if>
      <if test="banstart != null">
        #{banstart,jdbcType=TIMESTAMP},
      </if>
      <if test="banend != null">
        #{banend,jdbcType=TIMESTAMP},
      </if>
      <if test="coins != null">
        #{coins,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.model.UsersExample" resultType="java.lang.Integer">
    select count(*) from Users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update Users
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.identity != null">
        identity = #{record.identity,jdbcType=INTEGER},
      </if>
      <if test="record.banstate != null">
        banState = #{record.banstate,jdbcType=BIT},
      </if>
      <if test="record.bantype != null">
        banType = #{record.bantype,jdbcType=VARCHAR},
      </if>
      <if test="record.banreason != null">
        banReason = #{record.banreason,jdbcType=INTEGER},
      </if>
      <if test="record.banstart != null">
        banStart = #{record.banstart,jdbcType=TIMESTAMP},
      </if>
      <if test="record.banend != null">
        banEnd = #{record.banend,jdbcType=TIMESTAMP},
      </if>
      <if test="record.coins != null">
        coins = #{record.coins,jdbcType=INTEGER},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.token != null">
        token = #{record.token,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update Users
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      identity = #{record.identity,jdbcType=INTEGER},
      banState = #{record.banstate,jdbcType=BIT},
      banType = #{record.bantype,jdbcType=VARCHAR},
      banReason = #{record.banreason,jdbcType=INTEGER},
      banStart = #{record.banstart,jdbcType=TIMESTAMP},
      banEnd = #{record.banend,jdbcType=TIMESTAMP},
      coins = #{record.coins,jdbcType=INTEGER},
      password = #{record.password,jdbcType=VARCHAR},
      token = #{record.token,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>